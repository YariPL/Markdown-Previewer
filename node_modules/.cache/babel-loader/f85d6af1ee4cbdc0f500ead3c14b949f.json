{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Yari\\\\markdown\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Yari\\\\markdown\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Yari\\\\markdown\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Yari\\\\markdown\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Yari\\\\markdown\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yari\\\\markdown\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './index.css';\n\nvar Editor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Editor, _React$Component);\n\n  function Editor() {\n    _classCallCheck(this, Editor);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Editor).apply(this, arguments));\n  }\n\n  _createClass(Editor, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"editorField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        value: this.props.text,\n        className: \"editorFieldTextArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Editor;\n}(React.Component);\n\nvar Previer =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Previer, _React$Component2);\n\n  function Previer() {\n    _classCallCheck(this, Previer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Previer).apply(this, arguments));\n  }\n\n  _createClass(Previer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Previer;\n}(React.Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(App, _React$Component3);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      textData: \"\\n# Welcome to my React Markdown Previewer!\\n\\n## This is a sub-heading...\\n### And here's some other cool stuff:\\n  \\nHeres some code, `<div></div>`, between 2 backticks.\\n\\n```\\n// this is multi-line code:\\n\\nfunction anotherExample(firstLine, lastLine) {\\n  if (firstLine == '```' && lastLine == '```') {\\n    return multiLineCode;\\n  }\\n}\\n```\\n  \\nYou can also make text **bold**... whoa!\\nOr _italic_.\\nOr... wait for it... **_both!_**\\nAnd feel free to go crazy ~~crossing stuff out~~.\\n\\nThere's also [links](https://www.freecodecamp.com), and\\n> Block Quotes!\\n\\nAnd if you want to get really crazy, even tables:\\n\\nWild Header | Crazy Header | Another Header?\\n------------ | ------------- | ------------- \\nYour content can | be here, and it | can be here....\\nAnd here. | Okay. | I think we get it.\\n\\n- And of course there are lists.\\n  - Some are bulleted.\\n     - With different indentation levels.\\n        - That look like this.\\n\\n\\n1. And there are numbererd lists too.\\n1. Use just 1s if you want! \\n1. But the list goes on...\\n- Even if you use dashes or asterisks.\\n* And last but not least, let's not forget embedded images:\\n\\n![React Logo w/ Text](https://goo.gl/Umyytc)\\n\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Editor, {\n        text: this.state.textData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Yari\\markdown\\src\\App.js"],"names":["React","Component","Editor","props","text","Previer","App","state","textData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,aAAP;;IAIMC,M;;;;;;;;;;;;;6BACI;AACR,aACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,IAAxC;AAA8C,QAAA,SAAS,EAAC,qBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAKA;;;;EAPmBJ,KAAK,CAACC,S;;IAUrBI,O;;;;;;;;;;;;;6BACI;AACR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAIA;;;;EANoBL,KAAK,CAACC,S;;IAStBK,G;;;;;AACL,iBAAa;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ;AADI,KAAb;AAFY;AAmDZ;;;;6BACQ;AACR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADD;AAMA;;;;EA5DgBR,KAAK,CAACC,S;;AA+DxB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './index.css';\n\n\n\nclass Editor extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<div className='editorField'>\n\t\t\t\t<textarea type='text' value={this.props.text} className='editorFieldTextArea' />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Previer extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass App extends React.Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttextData: `\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Editor text={this.state.textData}\n\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}